{"version":3,"file":"component---src-pages-docker-deploy-developer-mode-md-457f39cdd93e55cebfe0.js","mappings":"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","sources":["webpack://commerce-cloud-tools/./src/pages/docker/deploy/developer-mode.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-cloud-tools/commerce-cloud-tools/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"developer-mode\"\n    }}>{`Developer mode`}</h1>\n    <p>{`Developer mode supports an active development environment with full, writable file system permissions.`}</p>\n    <p>{`This option builds the Docker environment in developer mode and verifies configured service versions. On macOS and Windows systems, performance is slower in developer mode because of additional file synchronization operations. However, you can improve performance by using either the `}<inlineCode parentName=\"p\">{`manual-native`}</inlineCode>{` or the `}<inlineCode parentName=\"p\">{`mutagen`}</inlineCode>{` file synchronization option when you generate the `}<inlineCode parentName=\"p\">{`docker-compose.yml`}</inlineCode>{` file. See `}<a parentName=\"p\" {...{\n        \"href\": \"../setup/synchronize-data.md\"\n      }}>{`Synchronizing data in Docker`}</a>{`.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The `}<inlineCode parentName=\"p\">{`ece-tools`}</inlineCode>{` package supports developer mode starting with version 2002.0.18.`}</p>\n    <p>{`Large files (>1 GB) can cause a period of inactivity. DB dumps and archive files—ZIP, SQL, GZ, and BZ2—are not necessary to sync. You can find exclusions to these file types in the `}<inlineCode parentName=\"p\">{`mutagen.sh`}</inlineCode>{` file.`}</p>\n    <p><strong parentName=\"p\">{`Prerequisites:`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Complete the `}<a parentName=\"li\" {...{\n          \"href\": \"../setup/initialize-docker.md\"\n        }}>{`installation steps`}</a>{`.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../setup/synchronize-data.md\"\n        }}>{`Install file synchronization tools`}</a>{` if needed.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`To launch the Docker environment in developer mode`}</strong>{`:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In your local project root, generate the Docker Compose configuration file. You can use the service configuration options, such as `}<inlineCode parentName=\"p\">{`--php`}</inlineCode>{`, to `}<a parentName=\"p\" {...{\n            \"href\": \"../containers/index.md#service-configuration-options\"\n          }}>{`specify a version`}</a>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`./vendor/bin/ece-docker build:compose --mode=\"developer\"\n`}</code></pre>\n        {/* <InlineAlert variant=\"info\" slots=\"text\"/> */}\n        <p parentName=\"li\">{`The `}<inlineCode parentName=\"p\">{`--mode`}</inlineCode>{` option in this step determines the mode in a later `}<inlineCode parentName=\"p\">{`deploy`}</inlineCode>{` step.`}</p>\n        <p parentName=\"li\">{`If necessary, set the option for `}{`[synchronizing data in Docker][sync]`}{`. For example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`./vendor/bin/ece-docker build:compose --mode=\"developer\" --sync-engine=\"mutagen\"\n`}</code></pre>\n        {/* <InlineAlert variant=\"help\" slots=\"text\"/> */}\n        <p parentName=\"li\">{`You can further customize the Docker Compose configuration file by adding additional options to the `}<inlineCode parentName=\"p\">{`build:compose`}</inlineCode>{` command. For example, you can set the software version for a service, or add Xdebug configuration. See `}<a parentName=\"p\" {...{\n            \"href\": \"../containers/index.md#service-configuration-options\"\n          }}>{`service configuration options`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><em parentName=\"p\">{`Optional`}</em>{`: If you have a custom PHP configuration file, copy the default configuration DIST file to your custom configuration file and make any necessary changes.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`cp .docker/config.php.dist .docker/config.php\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Build files to containers and run in the background.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`docker compose up -d\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`If you selected the `}<inlineCode parentName=\"p\">{`manual-native`}</inlineCode>{` option, start the file synchronization.`}</p>\n        <p parentName=\"li\"><strong parentName=\"p\">{`To copy all data from the local machine to the Docker volume:`}</strong></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`./bin/magento-docker copy-to --all\n`}</code></pre>\n        <p parentName=\"li\">{`Also, you can provide a specific directory from the local machine to copy to the Docker volume, for example `}<inlineCode parentName=\"p\">{`vendor`}</inlineCode>{`:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`./bin/magento-docker copy-to vendor\n`}</code></pre>\n        <p parentName=\"li\"><strong parentName=\"p\">{`To copy all data from the Docker volume to the local machine:`}</strong></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`./bin/magento-docker copy-from --all\n`}</code></pre>\n        <p parentName=\"li\">{`Also, you can provide a specific directory from the Docker volume to copy from, such as `}<inlineCode parentName=\"p\">{`vendor`}</inlineCode>{`:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`./bin/magento-docker copy-from vendor\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`If you selected `}<inlineCode parentName=\"p\">{`mutagen`}</inlineCode>{` for file synchronization, start the file synchronization.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`bash ./mutagen.sh\n`}</code></pre>\n        <p parentName=\"li\"><strong parentName=\"p\">{`Important`}</strong>{`:`}</p>\n        <p parentName=\"li\">{`If you host your Docker environment on Windows and the session start fails, update the `}<inlineCode parentName=\"p\">{`mutagen.sh`}</inlineCode>{` file to change the value for the `}<inlineCode parentName=\"p\">{`--symlink-mode`}</inlineCode>{` option to `}<inlineCode parentName=\"p\">{`portable`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Install Adobe Commerce in your Docker environment.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`For Adobe Commerce version 2.4 and 2.4.1 only, apply patches before you deploy.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`docker compose run --rm deploy php ./vendor/bin/ece-patches apply\n`}</code></pre>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Deploy Adobe Commerce in the Docker container.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`docker compose run --rm deploy cloud-deploy\n`}</code></pre>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Run post-deploy hooks.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`docker compose run --rm deploy cloud-post-deploy\n`}</code></pre>\n          </li>\n        </ul>\n        {/* <InlineAlert variant=\"info\" slots=\"text\"/> */}\n        <p parentName=\"li\">{`Developer mode does not require the `}<inlineCode parentName=\"p\">{`build`}</inlineCode>{` operation.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Configure and connect Varnish.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`docker compose run --rm deploy magento-command config:set system/full_page_cache/caching_application 2 --lock-env\n`}</code></pre>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`docker compose run --rm deploy magento-command setup:config:set --http-cache-hosts=varnish\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Clear the cache.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`docker compose run --rm deploy magento-command cache:clean\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Access the local storefront by opening one of the following URLs in a browser:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`http://magento2.docker`}</inlineCode></p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><inlineCode parentName=\"p\">{`https://magento2.docker`}</inlineCode></p>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Use the default credentials to log in to the Admin (`}<inlineCode parentName=\"p\">{`https://magento2.docker/admin`}</inlineCode>{`).`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`username = `}<inlineCode parentName=\"li\">{`Admin`}</inlineCode></li>\n          <li parentName=\"ul\">{`password = `}<inlineCode parentName=\"li\">{`123123q`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Access the default email service: `}<inlineCode parentName=\"p\">{`http://magento2.docker:8025`}</inlineCode></p>\n      </li>\n    </ol>\n    <InlineAlert variant=\"help\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`If you see the `}<inlineCode parentName=\"p\">{`Your connection is not private`}</inlineCode>{` error message while using an HTTPS connection, click `}<strong parentName=\"p\">{`Advanced`}</strong>{`, then click the `}<strong parentName=\"p\">{`Proceed to magento2.docker (unsafe)`}</strong>{` link. If you use Google Chrome and there is no `}<strong parentName=\"p\">{`Advanced`}</strong>{` button, then type `}<inlineCode parentName=\"p\">{`thisisunsafe`}</inlineCode>{` to bypass the security warnings. For `}<inlineCode parentName=\"p\">{`CURL`}</inlineCode>{` requests, add the `}<inlineCode parentName=\"p\">{`-k`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`--insecure`}</inlineCode>{` option to ignore certificate warnings.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}