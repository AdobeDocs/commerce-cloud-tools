{"version":3,"file":"component---src-pages-docker-configure-configuration-sources-md-bb7c70f8eace83035fc4.js","mappings":"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","sources":["webpack://commerce-cloud-tools/./src/pages/docker/configure/configuration-sources.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-cloud-tools/commerce-cloud-tools/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"configuration-sources\"\n    }}>{`Configuration sources`}</h1>\n    <p>{`You can create the Docker Compose configuration to build and deploy the Docker containers for your Adobe Commerce project from the following sources:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#cloud-configuration-for-commerce\"\n        }}>{`Adobe Commerce on cloud infrastructure project configuration files`}</a>{` for Cloud projects`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#unified-configuration\"\n        }}>{`Unified configuration`}</a>{` (`}<inlineCode parentName=\"li\">{`.magento.docker.yml`}</inlineCode>{`) for On-premises projects`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#cli-configuration\"\n        }}>{`CLI configuration`}</a>{` using `}<inlineCode parentName=\"li\">{`ece-docker build:compose`}</inlineCode>{` command options`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"custom-docker-compose.md\"\n        }}>{`Custom Docker Compose configuration file`}</a>{` supports installation for both Cloud and On-premises projects`}</li>\n    </ul>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`When you build the Docker Compose configuration file, the `}<inlineCode parentName=\"p\">{`ece-docker build:compose`}</inlineCode>{` command overwrites the existing `}<inlineCode parentName=\"p\">{`docker-compose.yml`}</inlineCode>{` configuration file. You can save customizations for the Docker Compose configuration in a `}<inlineCode parentName=\"p\">{`docker-compose.override.yml`}</inlineCode>{` file. If the `}<inlineCode parentName=\"p\">{`docker-compose.override.yml`}</inlineCode>{` file is present, then the override configuration merges with the base configuration. See `}<a parentName=\"p\" {...{\n        \"href\": \"../quick-reference.md#override-configuration\"\n      }}>{`Override configuration`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"cloud-configuration-for-commerce\"\n    }}>{`Cloud configuration for Commerce`}</h2>\n    <p>{`You need the following project configuration files to emulate a Cloud project in the Docker environment.`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://experienceleague.adobe.com/docs/commerce-cloud-service/user-guide/configure/app/configure-app-yaml.html\"\n        }}>{`.magento.app.yaml`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://experienceleague.adobe.com/docs/commerce-cloud-service/user-guide/configure/app/configure-app-yaml.html\"\n        }}>{`.magento/services.yaml`}</a></li>\n    </ul>\n    <p>{`Typically, these files supply the configuration settings in the generated `}<inlineCode parentName=\"p\">{`docker-compose.yml`}</inlineCode>{` file when you build and deploy a Cloud Docker environment from an Adobe Commerce on cloud infrastructure project directory.`}</p>\n    <h2 {...{\n      \"id\": \"unified-configuration\"\n    }}>{`Unified configuration`}</h2>\n    <p>{`If you do not have or want to use the Adobe Commerce on cloud infrastructure configuration files, Cloud Docker for Commerce supports a unified configuration file, `}<inlineCode parentName=\"p\">{`.magento.docker.yml`}</inlineCode>{`.`}</p>\n    <p>{`This configuration file includes the following sections:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-conf\"\n      }}>{`services: [] # List of services\nvariables: [] # List of environment variables\nhooks: [] # List of available hooks\nmounts: [] #l List of available mounts\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"services\"\n    }}>{`Services`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`services`}</inlineCode>{` section specifies the services configuration for the Docker environment with `}<inlineCode parentName=\"p\">{`version`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`enabled`}</inlineCode>{` fields.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`services:\n  php:\n    version: \"8.2\"\n    enabled: true|false\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`services`}</inlineCode>{` can include `}<inlineCode parentName=\"li\">{`php`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`mysql`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`redis`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`elasticsearch`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`opensearch`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`rabbitmq`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`cron`}</inlineCode>{`, and so on`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`version`}</inlineCode>{` specifies a `}{`[supported service version][Service configuration options]`}{`. The version must be compatible with the Adobe Commerce version you deploy.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`enabled`}</inlineCode>{` defaults to `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{` if not set`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"php-service\"\n    }}>{`PHP service`}</h4>\n    <p>{`The PHP service has additional properties: `}<inlineCode parentName=\"p\">{`extensions.enabled`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`extensions.disabled`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`services:\n  php:\n    version: \"8.2\"\n    extensions:\n      enabled:\n        - xsl\n      disabled:\n        - opcache\n`}</code></pre>\n    <p>{`If `}<inlineCode parentName=\"p\">{`extensions.enabled`}</inlineCode>{` is not provided, the PHP service is installed with the default extensions.`}</p>\n    <h4 {...{\n      \"id\": \"cron-service\"\n    }}>{`Cron service`}</h4>\n    <p>{`To enable cron, add the `}<inlineCode parentName=\"p\">{`cron`}</inlineCode>{` service.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`services:\n  cron:\n    jobs:\n      run:\n        schedule: \"* * * * *\"\n        command: \"php bin/magento cron:run\"\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"hooks\"\n    }}>{`Hooks`}</h3>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/commerce-cloud-service/user-guide/configure/app/properties/hooks-property.html\"\n      }}>{`hooks`}</a>{` section specifies the hook name and command list:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`hooks:\n  build: |\n    set -e\n    php ./vendor/bin/ece-tools run scenario/build/generate.xml\n    php ./vendor/bin/ece-tools run scenario/build/transfer.xml\n  deploy: |\n    php ./vendor/bin/ece-tools run scenario/deploy.xml\n  post_deploy: |\n    php ./vendor/bin/ece-tools run scenario/post-deploy.xml\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"variables\"\n    }}>{`Variables`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`variables`}</inlineCode>{` section specifies a configuration value to pass into the environment in the following format:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`variables:\n  DUMMY_VARIABLE: \"some value\"\n  DUMMY_ARRAY_VARIABLE:\n    TEST_VALUE: \"value\"\n    TEST_VALUE2: 2\n`}</code></pre>\n    <p>{`Array variables must be encoded with base64 encoding for JSON.`}</p>\n    <h3 {...{\n      \"id\": \"mounts\"\n    }}>{`Mounts`}</h3>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/commerce-cloud-service/user-guide/configure/app/properties/properties.html#mounts\"\n      }}>{`mounts`}</a>{` section specifies the path parameters for named mounts:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# The mounts that will be performed when the package is deployed.\nmounts:\n  var:\n    path: \"var\"\n  app-etc:\n    path: \"app/etc\"\n  pub-media:\n    path: \"pub/media\"\n  pub-static:\n    path: \"pub/static\"\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`path`}</inlineCode>{` is a required parameter to define a mounted volume. The value is a relative path in the container.`}</p>\n    <h2 {...{\n      \"id\": \"cli-configuration\"\n    }}>{`CLI configuration`}</h2>\n    <p>{`You can add options to the `}<inlineCode parentName=\"p\">{`ece-docker build:compose`}</inlineCode>{` command to quickly change the configuration when you build and deploy the Docker environment.`}</p>\n    <p>{`Use the command help to view the available options:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`php ./vendor/bin/ece-docker build:compose -h\n`}</code></pre>\n    <InlineAlert variant=\"success\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"../containers/index.md#service-configuration-options\"\n      }}>{`Service configuration options`}</a>{` for additional information about the service configuration options for the `}<inlineCode parentName=\"p\">{`ece-docker build:compose`}</inlineCode>{` command.`}</p>\n    {/*Link definitions*/}\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}