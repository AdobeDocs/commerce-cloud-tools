"use strict";(self.webpackChunkcommerce_cloud_tools=self.webpackChunkcommerce_cloud_tools||[]).push([[8559],{55389:function(e,n,o){o.r(n),o.d(n,{_frontmatter:function(){return i},default:function(){return u}});var t=o(87462),r=o(45987),a=(o(35776),o(3905)),d=o(91515);const m=["components"],i={},l=(s="InlineAlert",function(e){return console.warn("Component "+s+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.mdx)("div",e)});var s;const p={_frontmatter:i},c=d.Z;function u(e){let{components:n}=e,o=(0,r.Z)(e,m);return(0,a.mdx)(c,(0,t.Z)({},p,o,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"deploy-the-docker-environment"},"Deploy the Docker environment"),(0,a.mdx)("p",null,"By default, Cloud Docker for Commerce deploys Adobe Commerce to a read-only file system in the Docker environment."),(0,a.mdx)("p",null,"The default deployment mirrors the read-only file system in the cloud infrastructure Production environment. You can deploy a Docker environment in developer mode, which provides an active development environment with full, writable file system permissions. The ",(0,a.mdx)("inlineCode",{parentName:"p"},"ece-docker build:compose")," command generates the Docker Compose configuration file from project configuration settings and to deploy Adobe Commerce on cloud infrastructure to a local Docker environment. You supply the configuration settings from multiple sources depending on your requirements. See ",(0,a.mdx)("a",{parentName:"p",href:"../configure/configuration-sources.md"},"Configure sources"),"."),(0,a.mdx)(l,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),(0,a.mdx)("p",null,"When you run the ",(0,a.mdx)("inlineCode",{parentName:"p"},"ece-docker build:compose")," command, it regenerates the ",(0,a.mdx)("inlineCode",{parentName:"p"},"docker-compose.yml")," configuration file and overwrites the existing ",(0,a.mdx)("inlineCode",{parentName:"p"},"docker-compose.yml")," configuration file. You can save custom configurations across builds by adding the settings to a ",(0,a.mdx)("inlineCode",{parentName:"p"},"docker-compose.override.yml")," file. See a detailed example in the ",(0,a.mdx)("a",{parentName:"p",href:"../quick-reference.md"},"Docker quick reference"),"."),(0,a.mdx)("h2",{id:"launch-mode"},"Launch mode"),(0,a.mdx)("p",null,"You can launch a Docker environment in ",(0,a.mdx)("em",{parentName:"p"},"production")," or ",(0,a.mdx)("em",{parentName:"p"},"developer")," mode by setting the ",(0,a.mdx)("inlineCode",{parentName:"p"},"mode")," option on the ",(0,a.mdx)("inlineCode",{parentName:"p"},"ece-docker build:compose")," command:"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("p",{parentName:"li"},(0,a.mdx)("strong",{parentName:"p"},"Production mode"),"—The ",(0,a.mdx)("inlineCode",{parentName:"p"},'--mode="production"')," setting supports an active production environment with read-only file system permissions. This is the default configuration setting for launching a Docker environment. Selecting this option builds the Docker environment in production mode and verifies configured service versions. See ",(0,a.mdx)("a",{parentName:"p",href:"production-mode.md"},"Production mode launch instructions"),".")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("p",{parentName:"li"},(0,a.mdx)("strong",{parentName:"p"},"Developer mode"),"—The ",(0,a.mdx)("inlineCode",{parentName:"p"},'--mode="developer"')," setting supports an active development environment with full, writable file system permissions. Selecting this option builds the Docker environment in developer mode and verifies configured service versions. System performance is slower in developer mode because of additional file synchronization operations. See ",(0,a.mdx)("a",{parentName:"p",href:"developer-mode.md"},"Developer mode launch instructions"),"."))),(0,a.mdx)("p",null,"For example, the following command starts the Docker configuration generator for the developer mode:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-bash"},'./vendor/bin/ece-docker build:compose --mode="developer"\n')),(0,a.mdx)("p",null,"To skip the interactive mode, use the ",(0,a.mdx)("inlineCode",{parentName:"p"},"-n, --no-interaction")," option."),(0,a.mdx)(l,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,a.mdx)("p",null,"The ",(0,a.mdx)("inlineCode",{parentName:"p"},"mode")," option for the ",(0,a.mdx)("inlineCode",{parentName:"p"},"ece-docker build:compose")," command does not affect the mode. It determines the Adobe Commerce on cloud infrastructure file system installation and read-only or read-write behavior."),(0,a.mdx)("h2",{id:"stop-and-start-containers"},"Stop and start containers"),(0,a.mdx)("p",null,"You can stop containers and restore them afterwards using the following methods."),(0,a.mdx)("table",null,(0,a.mdx)("thead",{parentName:"table"},(0,a.mdx)("tr",{parentName:"thead"},(0,a.mdx)("th",{parentName:"tr",align:null},"Action"),(0,a.mdx)("th",{parentName:"tr",align:null},"Command"))),(0,a.mdx)("tbody",{parentName:"table"},(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},"Suspend containers to continue your work later"),(0,a.mdx)("td",{parentName:"tr",align:null},(0,a.mdx)("inlineCode",{parentName:"td"},"docker compose stop"))),(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},"Stop and remove all containers, images, and volumes"),(0,a.mdx)("td",{parentName:"tr",align:null},(0,a.mdx)("inlineCode",{parentName:"td"},"docker compose down"))),(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},"Start containers from a suspended state"),(0,a.mdx)("td",{parentName:"tr",align:null},(0,a.mdx)("inlineCode",{parentName:"td"},"docker compose start"))))),(0,a.mdx)("p",null,"Use the following command to stop and remove the Docker configuration:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-bash"},"docker compose down -v\n")),(0,a.mdx)(l,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),(0,a.mdx)("p",null,"This command removes all components of your local Docker instance including containers, networks, volumes, and images except for the persistent database and the ",(0,a.mdx)("inlineCode",{parentName:"p"},"magento-sync")," volume. See ",(0,a.mdx)("a",{parentName:"p",href:"../containers/index.md#rebuild-a-clean-environment"},"Rebuild a clean environment"),"."))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-docker-deploy-index-md-f304ed89c1e9e70eb1d5.js.map