{"version":3,"file":"component---src-pages-docker-setup-initialize-docker-md-e7284a946186419ea32b.js","mappings":"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","sources":["webpack://commerce-cloud-tools/./src/pages/docker/setup/initialize-docker.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-cloud-tools/commerce-cloud-tools/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"initialize-cloud-docker\"\n    }}>{`Initialize Cloud Docker`}</h1>\n    <p>{`Cloud Docker for Commerce is one of the packages in the Cloud Suite for Commerce designed to deploy and manage local Adobe Commerce projects into Docker environments.`}</p>\n    <InlineAlert variant=\"success\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Cloud Docker for Commerce supports the Adobe Commerce installation for both cloud and on-premises projects. The initialization steps are different for each project type.`}</p>\n    <h2 {...{\n      \"id\": \"cloud-infrastructure-projects\"\n    }}>{`Cloud infrastructure projects`}</h2>\n    <p>{`Adobe Commerce on cloud infrastructure tooling contains the `}<inlineCode parentName=\"p\">{`magento/magento-cloud-docker`}</inlineCode>{` package, which is installed and updated automatically with the `}<inlineCode parentName=\"p\">{`magento/ece-tools`}</inlineCode>{` package.`}</p>\n    <p><strong parentName=\"p\">{`To install an Adobe Commerce on cloud infrastructure project`}</strong>{`:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Download an application template from the `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/magento/magento-cloud\"\n          }}>{`Cloud template repository`}</a>{`. Be careful to select the branch that corresponds with the Commerce version.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Optionally, you can clone the latest template.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`git clone https://github.com/magento/magento-cloud.git <install-directory-name>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Change to the new project directory.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add your `}<a parentName=\"p\" {...{\n            \"href\": \"https://experienceleague.adobe.com/docs/commerce-operations/installation-guide/prerequisites/authentication-keys.html\"\n          }}>{`access credentials`}</a>{` to the `}<inlineCode parentName=\"p\">{`auth.json`}</inlineCode>{` file.`}</p>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"on-premises-projects\"\n    }}>{`On-premises projects`}</h2>\n    <p>{`An on-premises installation requires the stand-alone `}<inlineCode parentName=\"p\">{`magento/magento-cloud-docker`}</inlineCode>{` package available in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento-cloud-docker\"\n      }}>{`Cloud Docker GitHub repository`}</a>{`. When you initialize an Adobe Commerce project for Docker development, you must create a `}<a parentName=\"p\" {...{\n        \"href\": \"../configure/configuration-sources.md#unified-configuration\"\n      }}>{`.magento.docker.yml`}</a>{` configuration source file to create the Docker containers for the local environment.`}</p>\n    <p><strong parentName=\"p\">{`To install an Adobe Commerce on-premises project`}</strong>{`:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a project using `}<a parentName=\"p\" {...{\n            \"href\": \"https://experienceleague.adobe.com/docs/commerce-operations/installation-guide/composer.html#prerequisites\"\n          }}>{`Composer`}</a>{`.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{` composer create-project --repository-url=https://repo.magento.com/ magento/project-enterprise-edition <install-directory-name>\n`}</code></pre>\n        <p parentName=\"li\">{`This command installs the latest release. To install a specific version, specify the version number, for example `}<inlineCode parentName=\"p\">{`magento/project-enterprise-edition=2.4.6`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Change to the project directory.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add the ece-tools and Cloud Docker for Commerce packages.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`composer require --no-update --dev magento/ece-tools magento/magento-cloud-docker\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create the default configuration source file—`}<a parentName=\"p\" {...{\n            \"href\": \"../configure/configuration-sources.md#unified-configuration\"\n          }}>{`.magento.docker.yml`}</a>{`—to build the Docker containers for the local environment.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`name: magento\nsystem:\n    mode: 'production'\nservices:\n    php:\n        version: '8.2'\n        extensions:\n            enabled:\n                - xsl\n                - json\n                - redis\n    mysql:\n        version: '10.6'\n        image: 'mariadb'\n    redis:\n        version: '7.0'\n        image: 'redis'\n    opensearch:\n        version: '2.4'\n        image: 'magento/magento-cloud-docker-opensearch'\nhooks:\n    build: |\n        set -e\n        php ./vendor/bin/ece-tools run scenario/build/generate.xml\n        php ./vendor/bin/ece-tools run scenario/build/transfer.xml\n    deploy: 'php ./vendor/bin/ece-tools run scenario/deploy.xml'\n    post_deploy: 'php ./vendor/bin/ece-tools run scenario/post-deploy.xml'\nmounts:\n    var:\n        path: 'var'\n    app-etc:\n        path: 'app/etc'\n    pub-media:\n        path: 'pub/media'\n    pub-static:\n        path: 'pub/static'\n`}</code></pre>\n      </li>\n    </ol>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`This default configuration file provides the minimum configuration for the Docker environment. See `}<a parentName=\"p\" {...{\n        \"href\": \"../configure/index.md\"\n      }}>{`Configure the Docker environment`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"update-the-hosts-file-and-install-dependencies\"\n    }}>{`Update the hosts file and install dependencies`}</h2>\n    <p>{`Before you use Cloud Docker for Commerce, you must update the `}<inlineCode parentName=\"p\">{`etc/hosts`}</inlineCode>{` file and install required dependencies. You can do this manually, or using an installation script.`}</p>\n    <p><strong parentName=\"p\">{`To update and install manually`}</strong>{`:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add the default `}<inlineCode parentName=\"p\">{`magento2.docker`}</inlineCode>{` host to the hosts file to make Cloud Docker recognizable on the local machine.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`echo \"127.0.0.1 magento2.docker\" | sudo tee -a /etc/hosts\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Update the project dependencies.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`composer update\n`}</code></pre>\n      </li>\n    </ol>\n    <p><strong parentName=\"p\">{`To update and install using the installation script`}</strong>{`:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Install the template dependencies and add the default hostname to your `}<inlineCode parentName=\"p\">{`/etc/hosts`}</inlineCode>{` file.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`curl -sL https://github.com/magento/magento-cloud-docker/releases/download/1.3.5/init-docker.sh | bash -s -- --php 8.2\n`}</code></pre>\n        <p parentName=\"li\">{`If necessary, you can add options to the `}<inlineCode parentName=\"p\">{`init-docker.sh`}</inlineCode>{` initialization script to customize your Docker environment. Run the following command to see the available options:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`curl -sL https://github.com/magento/magento-cloud-docker/releases/download/1.3.5/init-docker.sh | bash -s -- --help\n`}</code></pre>\n      </li>\n    </ol>\n    <p>{`After you complete the installation, you can begin using the Docker environment.`}</p>\n    {/*Link definitions*/}\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","slots","parentName","isMDXComponent"],"sourceRoot":""}