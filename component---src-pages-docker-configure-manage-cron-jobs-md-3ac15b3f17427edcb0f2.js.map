{"version":3,"file":"component---src-pages-docker-configure-manage-cron-jobs-md-3ac15b3f17427edcb0f2.js","mappings":"mSAMaA,EAAe,CAAC,EAKvBC,GAJgBC,EAIY,cAJJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EAClB,GAHsBD,MAKtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAHgC,WACjCC,GAED,EADIP,GAAK,YAER,OAAO,SAACI,GAAS,UAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,oBACH,qBACL,kBAAK,QAAM,cAAGC,WAAW,IACrB,KAAQ,uCACL,kBAAsB,+FAA6F,cAAGA,WAAW,IACpI,KAAQ,2HACP,uBAAYA,WAAW,KAAM,SAAsB,qBAAmB,uBAAYA,WAAW,KAAM,qBAAkC,SAAa,oDAAkD,uBAAYA,WAAW,KAAM,+BAA4C,WAClR,SAACX,EAAW,CAACY,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,kBAAK,yHAAuH,uBAAYC,WAAW,KAAM,qBAAkC,eAAa,cAAGA,WAAW,IAClN,KAAQ,2IACL,oBAAwB,2BAAyB,uBAAYA,WAAW,KAAM,+BAA4C,+OACjI,kBAAK,0EACL,oBACE,eAAIA,WAAW,MAAO,QAAM,uBAAYA,WAAW,MAAO,kBAA+B,SAAO,uBAAYA,WAAW,MAAO,eAA4B,2EAC1J,eAAIA,WAAW,MAAO,iFAA+E,uBAAYA,WAAW,MAAO,0BAAuC,cAE5K,kBAAK,4JAA0J,uBAAYA,WAAW,KAAM,eAA4B,mBAAiB,uBAAYA,WAAW,KAAM,0BAAuC,qDAC7S,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,oGAEP,mBAAG,mBAAQA,WAAW,KAAM,2BAC5B,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,sEAEP,mBAAG,mBAAQA,WAAW,KAAM,gCAC5B,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,2EAIX,CAEAH,EAAWM,gBAAiB,C","sources":["webpack://commerce-cloud-tools/./src/pages/docker/configure/manage-cron-jobs.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-cloud-tools/commerce-cloud-tools/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"manage-cron-jobs\"\n    }}>{`Manage cron jobs`}</h1>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"../containers/cli.md#cron-container\"\n      }}>{`Cron container`}</a>{` runs the scheduled cron jobs automatically based on the cron configuration defined in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/commerce-cloud-service/user-guide/configure/app/properties/crons-property.html\"\n      }}><inlineCode parentName=\"a\">{`crons`}</inlineCode>{` property of the `}<inlineCode parentName=\"a\">{`.magento.app.yaml`}</inlineCode>{` file`}</a>{`, and any custom configuration specified in the `}<inlineCode parentName=\"p\">{`docker-compose-override.yml`}</inlineCode>{` file.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Adobe Commerce on cloud infrastructure includes a default cron configuration, which can be further customized in the `}<inlineCode parentName=\"p\">{`.magento.app.yaml`}</inlineCode>{` file. See `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/commerce-cloud-service/user-guide/configure/app/properties/crons-property.html#set-up-cron-jobs\"\n      }}>{`Set up cron jobs`}</a>{`. You can also use the `}<inlineCode parentName=\"p\">{`docker-compose-override.yml`}</inlineCode>{` file to customize the Cron container configuration for Docker without updating the environment configuration for the Adobe Commerce on cloud infrastructure project. The custom settings are applied during the build and deploy process.`}</p>\n    <p>{`The Adobe Commerce cron implementation has the following limitations:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`setup:cron:run`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`cron:update`}</inlineCode>{` commands are not available on Cloud and Docker for Cloud environments`}</li>\n      <li parentName=\"ul\">{`In the Docker environment, cron works only with the CLI container to run the `}<inlineCode parentName=\"li\">{`./bin/magento cron:run`}</inlineCode>{` command`}</li>\n    </ul>\n    <p>{`To improve the overall performance in the Docker development and production environments, the Cron container is not present by default. You can add the `}<inlineCode parentName=\"p\">{`--with-cron`}</inlineCode>{` option to the `}<inlineCode parentName=\"p\">{`ece-tools docker:build`}</inlineCode>{` command to enable the Cron container as needed.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`./vendor/bin/ece-docker build:compose --mode=\"developer\" --with-cron --sync-engine=\"mutagen\"\n`}</code></pre>\n    <p><strong parentName=\"p\">{`To view the cron log:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`docker compose run --rm deploy bash -c \"cat /app/var/cron.log\"\n`}</code></pre>\n    <p><strong parentName=\"p\">{`To run cron jobs manually:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`docker compose run --rm cron /usr/local/bin/php bin/magento cron:run\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}