{"version":3,"file":"component---src-pages-docker-containers-cli-md-b95eb074e3d483f694cb.js","mappings":"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","sources":["webpack://commerce-cloud-tools/./src/pages/docker/containers/cli.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-cloud-tools/commerce-cloud-tools/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"cli-containers\"\n    }}>{`CLI containers`}</h1>\n    <p>{`The following CLI containers, most of which are based on a `}<a parentName=\"p\" {...{\n        \"href\": \"https://hub.docker.com/r/magento/magento-cloud-docker-php\"\n      }}>{`PHP-CLI version 7 image`}</a>{`, provide `}<inlineCode parentName=\"p\">{`magento-cloud`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`ece-tools`}</inlineCode>{` commands to perform file system operations and interact with the application.`}</p>\n    <p>{`Operations include:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`build`}</inlineCode>{`—extends the CLI container to perform operations with writable filesystem, similar to the build phase`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`deploy`}</inlineCode>{`—extends the CLI container to use read-only file system, similar to the deploy phase`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cron`}</inlineCode>{`—extends the CLI container to run cron`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`node`}</inlineCode>{`—based on node image, used for NPM activities`}</li>\n    </ul>\n    <p>{`For example, you can check the state of your project using the `}<em parentName=\"p\">{`ideal-state`}</em>{` wizard:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`docker compose run --rm deploy ece-command wizard:ideal-state\n`}</code></pre>\n    <p>{`Sample response:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-terminal\"\n      }}>{` - Your application does not have the \"post_deploy\" hook enabled.\nThe configured state is not ideal\n`}</code></pre>\n    <p>{`All build and deploy processes are defined and configured using ece-tools and the Cloud template.`}</p>\n    <h2 {...{\n      \"id\": \"cli-container-commands\"\n    }}>{`CLI container commands`}</h2>\n    <p>{`These commands are available in the Cloud Docker for Commerce environment:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Command`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Target Containers`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Notes`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`cloud-build`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`build`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Build the application in production mode, configured by the build hook in the `}<inlineCode parentName=\"td\">{`.magento.app.yml`}</inlineCode>{` file`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`cloud-deploy`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`deploy`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Deploy the application, configured by the deploy hook in the `}<inlineCode parentName=\"td\">{`.magento.app.yml`}</inlineCode>{` file`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`cloud-post-deploy`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`deploy`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Run post deploy hooks, configured by the post deploy hook in the `}<inlineCode parentName=\"td\">{`.magento.app.yml`}</inlineCode>{` file`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ece-command`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`deploy`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Run `}<a parentName=\"td\" {...{\n              \"href\": \"https://experienceleague.adobe.com/docs/commerce-cloud-service/user-guide/dev-tools/ece-tools/package-overview.html\"\n            }}>{`ece-tools CLI commands`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`magento-command`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`deploy`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Run bin/magento commands`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`mftf-command`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`deploy`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Run MFTF command for testing`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`run-cron`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`cron`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Run cron jobs`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`See the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento-cloud-docker/tree/develop/images/php/cli/bin\"\n      }}>{`scripts in the Cloud Docker for Commerce GitHub repository`}</a>{` to understand the processing for each command.`}</p>\n    <h2 {...{\n      \"id\": \"build-container\"\n    }}>{`Build container`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Container name`}</strong>{`: build`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Docker base image`}</strong>{`: `}<a parentName=\"li\" {...{\n          \"href\": \"https://hub.docker.com/r/magento/magento-cloud-docker-php\"\n        }}>{`magento/magento-cloud-docker-php`}</a>{`, which is based on the Docker `}<a parentName=\"li\" {...{\n          \"href\": \"https://hub.docker.com/_/php\"\n        }}>{`php`}</a>{` image`}</li>\n    </ul>\n    <p>{`The Build container mimics the behavior of the Adobe Commerce on cloud infrastructure build process so that testing the build and deploy process is as close to testing in production as possible.`}</p>\n    <p>{`You can run build commands manually from the build container to perform individual steps from the build process. For example, you can run the following command to deploy static content:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`docker compose run --rm build magento-command setup:static-content:deploy\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"cron-container\"\n    }}>{`Cron container`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Container name`}</strong>{`: cron`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Docker base image`}</strong>{`: `}<a parentName=\"li\" {...{\n          \"href\": \"https://hub.docker.com/r/magento/magento-cloud-docker-php\"\n        }}>{`magento/magento-cloud-docker-php`}</a>{`, which is based on the Docker `}<a parentName=\"li\" {...{\n          \"href\": \"https://hub.docker.com/_/php\"\n        }}>{`php`}</a>{` image`}</li>\n    </ul>\n    <p>{`The Cron container runs operations in the background immediately after the Docker environment starts. This container uses the cron configuration defined in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/commerce-cloud-service/user-guide/configure/app/properties/crons-property.html\"\n      }}><inlineCode parentName=\"a\">{`crons`}</inlineCode>{` property of the `}<inlineCode parentName=\"a\">{`.magento.app.yaml`}</inlineCode>{` file`}</a>{`. This container has no custom configuration.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`To improve overall performance in the local Docker environment, the Cron container is not present by default. You can use the following command to add the Cron container to the Cloud Docker environment: `}<inlineCode parentName=\"p\">{`./vendor/bin/ece-docker build:compose --mode=\"developer\" --with-cron`}</inlineCode></p>\n    <p>{`For details on managing cron jobs in the Cloud Docker environment, see `}<a parentName=\"p\" {...{\n        \"href\": \"../configure/manage-cron-jobs.md\"\n      }}>{`Manage cron jobs`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"deploy-container\"\n    }}>{`Deploy container`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Container name`}</strong>{`: deploy`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Docker base image`}</strong>{`: `}<a parentName=\"li\" {...{\n          \"href\": \"https://hub.docker.com/r/magento/magento-cloud-docker-php\"\n        }}>{`magento/magento-cloud-docker-php`}</a>{`, which is based on the `}<a parentName=\"li\" {...{\n          \"href\": \"https://hub.docker.com/_/php\"\n        }}>{`php`}</a>{` Docker image`}</li>\n    </ul>\n    <p>{`The Deploy container mimics the Adobe Commerce on cloud infrastructure deploy process so that testing the build and deploy process is as close to testing in production as possible.`}</p>\n    <p>{`You can run `}<inlineCode parentName=\"p\">{`build`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`deploy`}</inlineCode>{` commands manually from the deploy container. The following example reindexes the Adobe Commerce store:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`docker compose run --rm deploy magento-command index:reindex\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"node-container\"\n    }}>{`Node container`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Container name`}</strong>{`: node`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Docker base image`}</strong>{`: `}<a parentName=\"li\" {...{\n          \"href\": \"https://hub.docker.com/_/node\"\n        }}>{`node`}</a></li>\n    </ul>\n    <p>{`The Node container is based on the `}<a parentName=\"p\" {...{\n        \"href\": \"https://hub.docker.com/_/node\"\n      }}>{`official Node Docker image`}</a>{`. You can use the container to install NPM dependencies, such as Gulp, or run any Node-based command-line tools.`}</p>\n    <p>{`To add the Node container to the Docker environment, you must specify the Node version to install:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`./vendor/bin/ece-docker build:compose --node <version>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}