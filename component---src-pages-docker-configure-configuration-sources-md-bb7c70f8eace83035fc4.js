"use strict";(self.webpackChunkcommerce_cloud_tools=self.webpackChunkcommerce_cloud_tools||[]).push([[6634],{96356:function(e,n,o){o.r(n),o.d(n,{_frontmatter:function(){return l},default:function(){return u}});var i=o(87462),a=o(45987),r=(o(35776),o(3905)),t=o(91515);const m=["components"],l={},d=(s="InlineAlert",function(e){return console.warn("Component "+s+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",e)});var s;const c={_frontmatter:l},p=t.Z;function u(e){let{components:n}=e,o=(0,a.Z)(e,m);return(0,r.mdx)(p,(0,i.Z)({},c,o,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"configuration-sources"},"Configuration sources"),(0,r.mdx)("p",null,"You can create the Docker Compose configuration to build and deploy the Docker containers for your Adobe Commerce project from the following sources:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#cloud-configuration-for-commerce"},"Adobe Commerce on cloud infrastructure project configuration files")," for Cloud projects"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#unified-configuration"},"Unified configuration")," (",(0,r.mdx)("inlineCode",{parentName:"li"},".magento.docker.yml"),") for On-premises projects"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"#cli-configuration"},"CLI configuration")," using ",(0,r.mdx)("inlineCode",{parentName:"li"},"ece-docker build:compose")," command options"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"custom-docker-compose.md"},"Custom Docker Compose configuration file")," supports installation for both Cloud and On-premises projects")),(0,r.mdx)(d,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,"When you build the Docker Compose configuration file, the ",(0,r.mdx)("inlineCode",{parentName:"p"},"ece-docker build:compose")," command overwrites the existing ",(0,r.mdx)("inlineCode",{parentName:"p"},"docker-compose.yml")," configuration file. You can save customizations for the Docker Compose configuration in a ",(0,r.mdx)("inlineCode",{parentName:"p"},"docker-compose.override.yml")," file. If the ",(0,r.mdx)("inlineCode",{parentName:"p"},"docker-compose.override.yml")," file is present, then the override configuration merges with the base configuration. See ",(0,r.mdx)("a",{parentName:"p",href:"../quick-reference.md#override-configuration"},"Override configuration"),"."),(0,r.mdx)("h2",{id:"cloud-configuration-for-commerce"},"Cloud configuration for Commerce"),(0,r.mdx)("p",null,"You need the following project configuration files to emulate a Cloud project in the Docker environment."),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"https://experienceleague.adobe.com/docs/commerce-cloud-service/user-guide/configure/app/configure-app-yaml.html"},".magento.app.yaml")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"https://experienceleague.adobe.com/docs/commerce-cloud-service/user-guide/configure/app/configure-app-yaml.html"},".magento/services.yaml"))),(0,r.mdx)("p",null,"Typically, these files supply the configuration settings in the generated ",(0,r.mdx)("inlineCode",{parentName:"p"},"docker-compose.yml")," file when you build and deploy a Cloud Docker environment from an Adobe Commerce on cloud infrastructure project directory."),(0,r.mdx)("h2",{id:"unified-configuration"},"Unified configuration"),(0,r.mdx)("p",null,"If you do not have or want to use the Adobe Commerce on cloud infrastructure configuration files, Cloud Docker for Commerce supports a unified configuration file, ",(0,r.mdx)("inlineCode",{parentName:"p"},".magento.docker.yml"),"."),(0,r.mdx)("p",null,"This configuration file includes the following sections:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-conf"},"services: [] # List of services\nvariables: [] # List of environment variables\nhooks: [] # List of available hooks\nmounts: [] #l List of available mounts\n")),(0,r.mdx)("h3",{id:"services"},"Services"),(0,r.mdx)("p",null,"The ",(0,r.mdx)("inlineCode",{parentName:"p"},"services")," section specifies the services configuration for the Docker environment with ",(0,r.mdx)("inlineCode",{parentName:"p"},"version")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"enabled")," fields."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-yaml"},'services:\n  php:\n    version: "8.2"\n    enabled: true|false\n')),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"services")," can include ",(0,r.mdx)("inlineCode",{parentName:"li"},"php"),", ",(0,r.mdx)("inlineCode",{parentName:"li"},"mysql"),", ",(0,r.mdx)("inlineCode",{parentName:"li"},"redis"),", ",(0,r.mdx)("inlineCode",{parentName:"li"},"elasticsearch"),", ",(0,r.mdx)("inlineCode",{parentName:"li"},"opensearch"),", ",(0,r.mdx)("inlineCode",{parentName:"li"},"rabbitmq"),", ",(0,r.mdx)("inlineCode",{parentName:"li"},"cron"),", and so on"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"version")," specifies a ","[supported service version][Service configuration options]",". The version must be compatible with the Adobe Commerce version you deploy."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"enabled")," defaults to ",(0,r.mdx)("inlineCode",{parentName:"li"},"true")," if not set")),(0,r.mdx)("h4",{id:"php-service"},"PHP service"),(0,r.mdx)("p",null,"The PHP service has additional properties: ",(0,r.mdx)("inlineCode",{parentName:"p"},"extensions.enabled")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"extensions.disabled")),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-yaml"},'services:\n  php:\n    version: "8.2"\n    extensions:\n      enabled:\n        - xsl\n      disabled:\n        - opcache\n')),(0,r.mdx)("p",null,"If ",(0,r.mdx)("inlineCode",{parentName:"p"},"extensions.enabled")," is not provided, the PHP service is installed with the default extensions."),(0,r.mdx)("h4",{id:"cron-service"},"Cron service"),(0,r.mdx)("p",null,"To enable cron, add the ",(0,r.mdx)("inlineCode",{parentName:"p"},"cron")," service."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-yaml"},'services:\n  cron:\n    jobs:\n      run:\n        schedule: "* * * * *"\n        command: "php bin/magento cron:run"\n')),(0,r.mdx)("h3",{id:"hooks"},"Hooks"),(0,r.mdx)("p",null,"The ",(0,r.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/docs/commerce-cloud-service/user-guide/configure/app/properties/hooks-property.html"},"hooks")," section specifies the hook name and command list:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-yaml"},"hooks:\n  build: |\n    set -e\n    php ./vendor/bin/ece-tools run scenario/build/generate.xml\n    php ./vendor/bin/ece-tools run scenario/build/transfer.xml\n  deploy: |\n    php ./vendor/bin/ece-tools run scenario/deploy.xml\n  post_deploy: |\n    php ./vendor/bin/ece-tools run scenario/post-deploy.xml\n")),(0,r.mdx)("h3",{id:"variables"},"Variables"),(0,r.mdx)("p",null,"The ",(0,r.mdx)("inlineCode",{parentName:"p"},"variables")," section specifies a configuration value to pass into the environment in the following format:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-yaml"},'variables:\n  DUMMY_VARIABLE: "some value"\n  DUMMY_ARRAY_VARIABLE:\n    TEST_VALUE: "value"\n    TEST_VALUE2: 2\n')),(0,r.mdx)("p",null,"Array variables must be encoded with base64 encoding for JSON."),(0,r.mdx)("h3",{id:"mounts"},"Mounts"),(0,r.mdx)("p",null,"The ",(0,r.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/docs/commerce-cloud-service/user-guide/configure/app/properties/properties.html#mounts"},"mounts")," section specifies the path parameters for named mounts:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-yaml"},'# The mounts that will be performed when the package is deployed.\nmounts:\n  var:\n    path: "var"\n  app-etc:\n    path: "app/etc"\n  pub-media:\n    path: "pub/media"\n  pub-static:\n    path: "pub/static"\n')),(0,r.mdx)("p",null,"The ",(0,r.mdx)("inlineCode",{parentName:"p"},"path")," is a required parameter to define a mounted volume. The value is a relative path in the container."),(0,r.mdx)("h2",{id:"cli-configuration"},"CLI configuration"),(0,r.mdx)("p",null,"You can add options to the ",(0,r.mdx)("inlineCode",{parentName:"p"},"ece-docker build:compose")," command to quickly change the configuration when you build and deploy the Docker environment."),(0,r.mdx)("p",null,"Use the command help to view the available options:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"php ./vendor/bin/ece-docker build:compose -h\n")),(0,r.mdx)(d,{variant:"success",slots:"text",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,"See ",(0,r.mdx)("a",{parentName:"p",href:"../containers/index.md#service-configuration-options"},"Service configuration options")," for additional information about the service configuration options for the ",(0,r.mdx)("inlineCode",{parentName:"p"},"ece-docker build:compose")," command."))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-docker-configure-configuration-sources-md-bb7c70f8eace83035fc4.js.map