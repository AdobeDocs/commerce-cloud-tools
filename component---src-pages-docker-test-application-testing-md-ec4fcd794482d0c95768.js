"use strict";(self.webpackChunkcommerce_cloud_tools=self.webpackChunkcommerce_cloud_tools||[]).push([[3249],{14738:function(e,a,n){n.r(a),n.d(a,{_frontmatter:function(){return d},default:function(){return u}});var t=n(87462),m=n(45987),o=(n(35776),n(3905)),r=n(91515);const p=["components"],d={},c=(l="InlineAlert",function(e){return console.warn("Component "+l+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.mdx)("div",e)});var l;const s={_frontmatter:d},i=r.Z;function u(e){let{components:a}=e,n=(0,m.Z)(e,p);return(0,o.mdx)(i,(0,t.Z)({},s,n,{components:a,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"application-testing"},"Application testing"),(0,o.mdx)("p",null,"In a Cloud Docker development environment, you can use the ",(0,o.mdx)("a",{parentName:"p",href:"https://developer.adobe.com/commerce/testing/functional-testing-framework/"},"Magento Functional Testing Framework (MFTF)")," for application testing."),(0,o.mdx)("p",null,"In this environment, you run MFTF commands using the ",(0,o.mdx)("inlineCode",{parentName:"p"},"mftf-command")," (",(0,o.mdx)("a",{parentName:"p",href:"../containers/cli.md#cli-container-commands"},"CLI container command"),"). For example, the following command generates the MFTF tests:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"docker compose run test mftf-command generate:tests --debug=none\n")),(0,o.mdx)(c,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,o.mdx)("p",null,"Support for MFTF requires ",(0,o.mdx)("inlineCode",{parentName:"p"},"magento/magento-cloud-docker")," version 1.0 or later."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"To set up and run MFTF tests in a Cloud Docker environment"),":"),(0,o.mdx)("ol",null,(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Prepare the local environment."),(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},"Add the MFTF dependency to your project using Composer."),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},'composer require "magento/magento2-functional-testing-framework" --no-update\n'))),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("p",{parentName:"li"},"Install the new Composer dependencies."),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"composer update\n"))))),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Generate the ",(0,o.mdx)("inlineCode",{parentName:"p"},"docker-compose.yml")," file."),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"./vendor/bin/ece-docker build:compose --with-selenium --with-test\n"))),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Start the Cloud Docker for Commerce environment. Optionally, you can set up Cloud Docker for Commerce to work in ",(0,o.mdx)("a",{parentName:"p",href:"../deploy/developer-mode.md"},"Developer Mode"),"."),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"./bin/magento-docker up\n")),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"./bin/magento-docker ece-redeploy\n"))),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Prepare the Magento application by adding environment variables that are specific to MFTF."),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},'CONFIG="MAGENTO_BASE_URL=http://magento2.docker/\nCREDENTIALS="magento/MAGENTO_ADMIN_PASSWORD=123123q"\nMAGENTO_BACKEND_NAME=admin\nMAGENTO_ADMIN_USERNAME=admin\nMAGENTO_ADMIN_PASSWORD=123123q\nMODULE_ALLOWLIST=Magento_Framework,Magento_ConfigurableProductWishlist,Magento_ConfigurableProductCatalogSearch\nSELENIUM_HOST=selenium"\n')),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},'docker compose run deploy bash -c "echo \\"$CREDENTIALS\\" > /app/dev/tests/acceptance/.credentials"\n')),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},'docker compose run deploy bash -c "echo \\"$CONFIG\\" > /app/dev/tests/acceptance/.env"\n')),(0,o.mdx)("p",{parentName:"li"},"In this example, the variable configuration is for testing a Magento application deployed to the Docker environment. To run tests in a remote environment, change the value of ",(0,o.mdx)("inlineCode",{parentName:"p"},"MAGENTO_BASE_URL")," to the remote URL and update the credentials as needed.")),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Disable the Magento settings that conflict with MFTF functionality."),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"docker compose run deploy magento-command config:set admin/security/admin_account_sharing 1\n")),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"docker compose run deploy magento-command config:set admin/security/use_form_key 0\n")),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"docker compose run deploy magento-command config:set web/secure/use_in_adminhtml 0\n"))),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Enable the Varnish cache for the Magento application."),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"docker compose run deploy magento-command config:set  system/full_page_cache/caching_application 2 --lock-env\n")),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"docker compose run deploy magento-command setup:config:set  --http-cache-hosts=varnish\n"))),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Clear the cache."),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"docker compose run deploy magento-command cache:clean\n"))),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Generate MFTF tests."),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"docker compose run test mftf-command build:project\n")),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"docker compose run test mftf-command generate:tests --debug=none\n"))),(0,o.mdx)("li",{parentName:"ol"},(0,o.mdx)("p",{parentName:"li"},"Run the generated tests."),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"docker compose run test mftf-command run:test AdminLoginTest --debug=none\n")),(0,o.mdx)("pre",{parentName:"li"},(0,o.mdx)("code",{parentName:"pre",className:"language-bash"},"docker compose run test mftf-command run:test AddProductBySkuWithEmptyQtyTest --debug=none\n")))))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-docker-test-application-testing-md-ec4fcd794482d0c95768.js.map