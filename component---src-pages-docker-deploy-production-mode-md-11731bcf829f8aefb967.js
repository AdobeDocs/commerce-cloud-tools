"use strict";(self.webpackChunkcommerce_cloud_tools=self.webpackChunkcommerce_cloud_tools||[]).push([[82],{23185:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return i},default:function(){return u}});var o=a(87462),t=a(45987),m=(a(35776),a(3905)),r=a(91515);const p=["components"],i={},d=(l="InlineAlert",function(e){return console.warn("Component "+l+" was not imported, exported, or provided by MDXProvider as global scope"),(0,m.mdx)("div",e)});var l;const c={_frontmatter:i},s=r.Z;function u(e){let{components:n}=e,a=(0,t.Z)(e,p);return(0,m.mdx)(s,(0,o.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,m.mdx)("h1",{id:"production-mode"},"Production mode"),(0,m.mdx)("p",null,"Production mode simulates your Commerce application in production so that you can verify configured services."),(0,m.mdx)("p",null,"Production mode is the default configuration setting for launching the Docker environment with read-only filesystem permissions."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Prerequisites:")),(0,m.mdx)("p",null,"Complete the ",(0,m.mdx)("a",{parentName:"p",href:"../setup/initialize-docker.md"},"installation steps"),"."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"To launch the Docker environment in production mode"),":"),(0,m.mdx)("ol",null,(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},"In your local environment, start the Docker configuration generator. You can use the service configuration options, such as ",(0,m.mdx)("inlineCode",{parentName:"p"},"--php"),", to ",(0,m.mdx)("a",{parentName:"p",href:"../containers/index.md#service-configuration-options"},"specify a version"),"."),(0,m.mdx)("pre",{parentName:"li"},(0,m.mdx)("code",{parentName:"pre",className:"language-bash"},"./vendor/bin/ece-docker build:compose\n"))),(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},(0,m.mdx)("em",{parentName:"p"},"Optional"),": If you have a custom PHP configuration file, copy the default configuration DIST file to your custom configuration file and make any necessary changes."),(0,m.mdx)("pre",{parentName:"li"},(0,m.mdx)("code",{parentName:"pre",className:"language-bash"},"cp .docker/config.php.dist .docker/config.php\n"))),(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},"Build files to containers and run in the background."),(0,m.mdx)("pre",{parentName:"li"},(0,m.mdx)("code",{parentName:"pre",className:"language-bash"},"docker compose up -d\n"))),(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},"Install Adobe Commerce in your Docker environment."),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("p",{parentName:"li"},"Build Adobe Commerce in the Docker container."),(0,m.mdx)("pre",{parentName:"li"},(0,m.mdx)("code",{parentName:"pre",className:"language-bash"},"docker compose run --rm build cloud-build\n"))),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("p",{parentName:"li"},"Deploy Adobe Commerce in the Docker container."),(0,m.mdx)("pre",{parentName:"li"},(0,m.mdx)("code",{parentName:"pre",className:"language-bash"},"docker compose run --rm deploy cloud-deploy\n"))),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("p",{parentName:"li"},"Run post-deploy hooks."),(0,m.mdx)("pre",{parentName:"li"},(0,m.mdx)("code",{parentName:"pre",className:"language-bash"},"docker compose run --rm deploy cloud-post-deploy\n"))))),(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},"Configure and connect Varnish."),(0,m.mdx)("pre",{parentName:"li"},(0,m.mdx)("code",{parentName:"pre",className:"language-bash"},"docker compose run --rm deploy magento-command config:set system/full_page_cache/caching_application 2 --lock-env\n")),(0,m.mdx)("pre",{parentName:"li"},(0,m.mdx)("code",{parentName:"pre",className:"language-bash"},"docker compose run --rm deploy magento-command setup:config:set --http-cache-hosts=varnish\n"))),(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},"Clear the cache."),(0,m.mdx)("pre",{parentName:"li"},(0,m.mdx)("code",{parentName:"pre",className:"language-bash"},"docker compose run --rm deploy magento-command cache:clean\n"))),(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},(0,m.mdx)("em",{parentName:"p"},"Optional"),": Restart services if the static content does not synchronize with all images after generation on build phase."),(0,m.mdx)("pre",{parentName:"li"},(0,m.mdx)("code",{parentName:"pre",className:"language-bash"},"docker compose restart\n"))),(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},"Access the local storefront by opening one of the following URLs in a browser:"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("p",{parentName:"li"},(0,m.mdx)("inlineCode",{parentName:"p"},"http://magento2.docker"))),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("p",{parentName:"li"},(0,m.mdx)("inlineCode",{parentName:"p"},"https://magento2.docker"))))),(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},"Use the default credentials to log in to the Admin (",(0,m.mdx)("inlineCode",{parentName:"p"},"https://magento2.docker/admin"),")."),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},"username = ",(0,m.mdx)("inlineCode",{parentName:"li"},"Admin")),(0,m.mdx)("li",{parentName:"ul"},"password = ",(0,m.mdx)("inlineCode",{parentName:"li"},"123123q")))),(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},"Access the default email service: ",(0,m.mdx)("inlineCode",{parentName:"p"},"http://magento2.docker:8025")))),(0,m.mdx)(d,{variant:"help",slots:"text",mdxType:"InlineAlert"}),(0,m.mdx)("p",null,"If you see the ",(0,m.mdx)("inlineCode",{parentName:"p"},"Your connection is not private")," error message while using an HTTPS connection, click ",(0,m.mdx)("strong",{parentName:"p"},"Advanced"),", then click the ",(0,m.mdx)("strong",{parentName:"p"},"Proceed to magento2.docker (unsafe)")," link. If you use Google Chrome and there is no ",(0,m.mdx)("strong",{parentName:"p"},"Advanced")," button, then type ",(0,m.mdx)("inlineCode",{parentName:"p"},"thisisunsafe")," to bypass the security warnings. For ",(0,m.mdx)("inlineCode",{parentName:"p"},"CURL")," requests, add the ",(0,m.mdx)("inlineCode",{parentName:"p"},"-k")," or ",(0,m.mdx)("inlineCode",{parentName:"p"},"--insecure")," option to ignore certificate warnings."))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-docker-deploy-production-mode-md-11731bcf829f8aefb967.js.map